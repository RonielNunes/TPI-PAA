• includes.h
    - Foi criado um arquivo .h chamado includes que irá conter as chamadas de todas as bibliotecas 
      usadas no trabalho prático, bem como a definição do SO para definir qual comando será utilizado
      para limpar o terminal (cls no windows e clear no linux);
    - Assim, ao invés de incluir a mesma biblioteca em vários arquivos diferentes, incluimos tudo
      no includes.h e posteriormente chamamos tal arquivo com as bibliotecas necessarias;

• ED
    - ED usada: matriz alocada dinamicamente

• Menu
    - O menu é executado sempre que a opção escolhida seja != de 0, por meio de um do-while;
    - Conta com a função linha, que printa 40x "=";
    - Conta também com a função textoInicial, que printa o titulo do algoritmo;
    - Após ser mostrado o texto inicial junto às linhas, é mostrado as opções do usuário
        - Opção esta que é retornada pela função escolhaUsuario para a main para assim executar o
          comando por meio de um switch/case

• Leitura de Arquivo
    - Retorna uma matriz alocada dinamicamente ou nulo, depende da abertura do arquivo
    - Após o usuario entrar com o nome do arquivo, é concatenada a string "./arquivos/" com o 
      nome digitado pelo usuario e armazenada, a nova string, na variavel "caminhoArquivo";
        - Essa concatenação se deve ao fato dos arquivos estarem em uma pasta separada "arquivos"
    - Após a definição do endereço do arquivo é tentada a leitura. Caso falhe, uma mensagem é
      mostrada na tela e o programa retorna nulo para o main, caso contrário, prossegue com a 
      execução;
    - Por meio da função fscanf são armazenados os primeiros parâmetros, separados por espaço, em
      suas respectivas variáveis;
    - As demais linhas dizem respeito aos valores que irão compor a matriz, linhas essas que não
      apresentam espaço entre os valores, logo os valores serão armazenados em uma variável string;
        - Após isso, pegamos cada posição dessa string por meio de um for;
        - Fazemos o valor dessa posição - '0' para converter para inteiro;
        - Atribuimos esse inteiro para a posição i, j da matriz;
    - Fechamos o arquivo.
    - Caso a leitura ocorra sem problemas, é retornado o labirinto contido no arquivo;
      - Labirinto este atribuído para o labirinto declarado na main

• limpaTela
    - Depois de definido o SO, esta função contem um if/else para definir qual comando será usado
      para limpar o terminal, portanto, basta chamar a funcao limpaTela;
        - Funcional no windows e linux

• inicializaLabirinto
    - A função inicialização tem como parametros as variaveis linha e colunas, ambas do tipo inteiro.
     Essa função retorna o tipo "Labirinto", esse tipo é a renomeação de um duplo ponteiro para 
     inteiro.Além disso é usado nessa função a calloc para fazer a alocação da matriz. A função 
     calloc, nescessita de dois argumentos o número de variáveis a ser alocadas na memoria e o 
     tamanho em bytes do tipo da variavel que será alocada.

    - Execução

    Primeiramente é feito a criação de uma variável do tipo Labirinto, nomeada de labirintoExterno.
    A labirintoExterno receberá a alocação da quantidade de linhas + 1, isso ocore pois essa primeira
    alocação se faz de inicio de um ponteiro para outro ponteiro que por sua vez aponta para a  
    posicao que armazenar um valor. Assim perdemos uma posição por termos dois ponteiro, sendo nescessario
    o acrescimo de mais um. 
    Para a alocação das colunas, temos que somar mais um também por causa da perda citada. Essa alocação
    utiliza-se de um for para passar por tordas as linhas alocadas e apartir de cada linha é alocado um vetor 
    tendo a quantidade de colunas lidas do arquivo.
      
    Resumo apartir do primeiro ponteiro: A alocação é composta de um vetor de ponteiros que corresponde ao 
    primeiro indice da matriz, sendo que cada ponteiro aponta para o inicio de uma linha da matriz. Em cada 
    linha existe um vetor alocado dinamicamente.


• mostraLabirinto
  A função mostra labirinto, tem como parametro a quantidade de linhas, colunas e a variavel que armazena
  a matriz com os valores que o representa. Essa função faz a utilização de dois fors aninhados, sendo o 
  primeiro utilizado para percorrer as linhas e o segundo para percorrer as colunas.
  A matriz é exibida em sua forma padrão, linhas x colunas. 

• getPosicaoInicialEstudante
  A função getPosicaoInicialEstudante, tem como parametros a quantidade de linhas, colunas, o labirinto 
  que contem a matriz e mais duas variáveis passadas por referência(x e y). O Funcionamento da função é
  o mesmo da mostraLabirinto, no entanto, se diferencia com a presença da condição para identificar onde
  o valor 0(zero) e encontra na matriz. Quando é encontrado, temos a alteração dos valores das variáveis 
  x e y, recendo os indices i e j respectivamente. 
  
• Observações - fazer após terminar o TP
    - Retirar printfs de debug e fazer comentários pertinentes
    - Acrescentar printf na funcao getPosicaoInicialEstudante = "O estudante esta inicialmente na posicao x, y